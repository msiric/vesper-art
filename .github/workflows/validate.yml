name: Validate deployment

on:
  push:
    branches:
      - master
  pull_request:
env:
  FLY_API_TOKEN: ${{ secrets.FLY_ACCESS_TOKEN }}
jobs:
  validate-server:
    name: Validate Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Create env file
        run: |
          touch .env.testing
          echo 'ACCESS_TOKEN_EXPIRY=${{ secrets.ACCESS_TOKEN_EXPIRY }}' >> .env.testing
          echo 'ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}' >> .env.testing
          echo 'ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}' >> .env.testing
          echo 'ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }}' >> .env.testing
          echo 'CLIENT_URI=${{ secrets.CLIENT_TEST_URI }}' >> .env.testing
          echo 'COOKIE_SECRET=${{ secrets.COOKIE_SECRET }}' >> .env.testing
          echo 'MAILER_HOST=${{ secrets.MAILER_TEST_HOST }}' >> .env.testing
          echo 'MAILER_MAIL=${{ secrets.MAILER_TEST_MAIL }}' >> .env.testing
          echo 'MAILER_PASS=${{ secrets.MAILER_TEST_PASS }}' >> .env.testing
          echo 'MAILER_SENDER=${{ secrets.MAILER_TEST_SENDER }}' >> .env.testing
          echo 'REFRESH_TOKEN_EXPIRY=${{ secrets.REFRESH_TOKEN_EXPIRY }}' >> .env.testing
          echo 'REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}' >> .env.testing
          echo 'S3_ID=${{ secrets.S3_ID }}' >> .env.testing
          echo 'S3_SECRET=${{ secrets.S3_SECRET }}' >> .env.testing
          echo 'S3_BUCKET=${{ secrets.S3_TEST_BUCKET }}' >> .env.testing
          echo 'S3_REGION=${{ secrets.S3_TEST_REGION }}' >> .env.testing
          echo 'SERVER_URI=${{ secrets.SERVER_TEST_URI }}' >> .env.testing
          echo 'PG_DB_URL=${{ secrets.PG_TEST_DB }}' >> .env.testing

      - name: Tests
        run: |
          yarn run proxy:test & yarn run test

  validate-client:
    name: Validate Client
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    env:
      CI: false
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn run build